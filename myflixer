#!/usr/bin/env ruby
# Id$ nonnax 2022-02-17 13:07:07 +0800
require 'mechanize'
require 'pp'

URL_ROOT='https://myflixer.to'
i, t, _=ARGV

t ||= 'tv'
type = %w[tv-show movie].grep(/#{t}/).first
t = type.sub('-show', '')

start=((i.to_i-1)*5)+1
stop=((start-1)+5)

th=[]
pages=[]

(start..stop).each do |i|
 th << Thread.new(i, type) do |i|
    url="https://myflixer.to/#{type}?page=#{i}"
    agent=Mechanize.new
    page=agent.get(url)
    pages<<page
  end
end

th.map(&:join)
# 
# found = pages.first.links.select{|e| !e.text.empty? && e.href.to_s.match(/genre\//) }
# found.each do |pg|
  # puts pg.text.strip
# end
# 
# re=Regexp.new "#{t}\/"
# 
# pages.map do |page|
  # page
  # .links
  # .select{|e| !e.text.empty? && e.href.to_s.match(re) }
  # .sort_by{|e| e.text}
# end
# .flatten
# .each do |pg|
    # # p (pg.methods - Object.methods)
    # puts [pg.text, pg.resolved_uri.to_s].join("\t")
    # # puts pg.text
  # end

# pp found.click
# pages.map do |page|
  # page.search('//img[contains(@class,"film-poster-img")]')
      # .map{|e|
          # ea=e.attributes
          # puts [ea['alt'], ea['data-src']]
                # .map(&:to_s)
                # .join("\t")
       # }
# end


pages.map do |page|
  page
    .search('//img[contains(@class,"film-poster-img")]')
    .map do |e| 
      ea=e.attributes 
      puts [
            ea['data-src'], 
            ea['alt'], 
            e.parent
              .search('a')
              .map{|a| [URL_ROOT, a.attributes["href"].value].join }
              .pop
           ]
           .map(&:to_s) 
           .join("\t") 
    end
end
